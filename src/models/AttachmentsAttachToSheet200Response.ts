/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Attachment } from './Attachment';
import {
    AttachmentFromJSON,
    AttachmentFromJSONTyped,
    AttachmentToJSON,
    AttachmentToJSONTyped,
} from './Attachment';

/**
 * 
 * @export
 * @interface AttachmentsAttachToSheet200Response
 */
export interface AttachmentsAttachToSheet200Response {
    /**
     * New version of the sheet. Applicable only for operations which update sheet data.
     * @type {number}
     * @memberof AttachmentsAttachToSheet200Response
     */
    version?: number | null;
    /**
     * Message that indicates the outcome of the request. (One of SUCCESS or PARTIAL_SUCCESS.)
     * @type {string}
     * @memberof AttachmentsAttachToSheet200Response
     */
    message?: AttachmentsAttachToSheet200ResponseMessageEnum;
    /**
     * * '0' Success
     * * '3' Partial Success of Bulk Operation
     * @type {number}
     * @memberof AttachmentsAttachToSheet200Response
     */
    resultCode?: AttachmentsAttachToSheet200ResponseResultCodeEnum;
    /**
     * 
     * @type {Attachment}
     * @memberof AttachmentsAttachToSheet200Response
     */
    result?: Attachment;
}


/**
 * @export
 */
export const AttachmentsAttachToSheet200ResponseMessageEnum = {
    PartialSuccess: 'PARTIAL_SUCCESS',
    Success: 'SUCCESS'
} as const;
export type AttachmentsAttachToSheet200ResponseMessageEnum = typeof AttachmentsAttachToSheet200ResponseMessageEnum[keyof typeof AttachmentsAttachToSheet200ResponseMessageEnum];

/**
 * @export
 */
export const AttachmentsAttachToSheet200ResponseResultCodeEnum = {
    NUMBER_0: 0,
    NUMBER_3: 3
} as const;
export type AttachmentsAttachToSheet200ResponseResultCodeEnum = typeof AttachmentsAttachToSheet200ResponseResultCodeEnum[keyof typeof AttachmentsAttachToSheet200ResponseResultCodeEnum];


/**
 * Check if a given object implements the AttachmentsAttachToSheet200Response interface.
 */
export function instanceOfAttachmentsAttachToSheet200Response(value: object): value is AttachmentsAttachToSheet200Response {
    return true;
}

export function AttachmentsAttachToSheet200ResponseFromJSON(json: any): AttachmentsAttachToSheet200Response {
    return AttachmentsAttachToSheet200ResponseFromJSONTyped(json, false);
}

export function AttachmentsAttachToSheet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttachmentsAttachToSheet200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'] == null ? undefined : json['version'],
        'message': json['message'] == null ? undefined : json['message'],
        'resultCode': json['resultCode'] == null ? undefined : json['resultCode'],
        'result': json['result'] == null ? undefined : AttachmentFromJSON(json['result']),
    };
}

export function AttachmentsAttachToSheet200ResponseToJSON(json: any): AttachmentsAttachToSheet200Response {
    return AttachmentsAttachToSheet200ResponseToJSONTyped(json, false);
}

export function AttachmentsAttachToSheet200ResponseToJSONTyped(value?: AttachmentsAttachToSheet200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': value['version'],
        'message': value['message'],
        'resultCode': value['resultCode'],
        'result': AttachmentToJSON(value['result']),
    };
}

