/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Describes the dashboard's publish settings.
 * @export
 * @interface SightPublish
 */
export interface SightPublish {
    /**
     * Indicates who can access the 'Read-Only Full' view of the published dashboard. Only returned in the response if **readOnlyFullEnabled = true**.
     *   * **ALL** - available to anyone who has the link.
     *   * **ORG** - available only to members of the dashboard owner's Smartsheet organization account.
     *   * **SHARED** - available only to users shared to the item.
     * 
     * ---
     * If **readOnlyFullEnabled** is set to true in the request, but **readOnlyFullAccessibleBy** is not specified, the value of **readOnlyFullAccessibleBy** defaults to the organization-level 'Dashboard Publishing' setting (if the dashboard owner belongs to an organization account) or to **ALL** (if the dashboard owner does not belong to an organization account).
     * 
     * @type {string}
     * @memberof SightPublish
     */
    readOnlyFullAccessibleBy?: SightPublishReadOnlyFullAccessibleByEnum;
    /**
     * If true, a rich version of the dashboard is published with the ability to use shortcuts and widget interactions.
     * @type {boolean}
     * @memberof SightPublish
     */
    readOnlyFullEnabled: boolean;
    /**
     * URL for 'Read-Only Full' view of the published dashboard. Only returned in a response if readOnlyFullEnabled = true.
     * @type {string}
     * @memberof SightPublish
     */
    readonly readOnlyFullUrl?: string;
}


/**
 * @export
 */
export const SightPublishReadOnlyFullAccessibleByEnum = {
    All: 'ALL',
    Org: 'ORG'
} as const;
export type SightPublishReadOnlyFullAccessibleByEnum = typeof SightPublishReadOnlyFullAccessibleByEnum[keyof typeof SightPublishReadOnlyFullAccessibleByEnum];


/**
 * Check if a given object implements the SightPublish interface.
 */
export function instanceOfSightPublish(value: object): value is SightPublish {
    if (!('readOnlyFullEnabled' in value) || value['readOnlyFullEnabled'] === undefined) return false;
    return true;
}

export function SightPublishFromJSON(json: any): SightPublish {
    return SightPublishFromJSONTyped(json, false);
}

export function SightPublishFromJSONTyped(json: any, ignoreDiscriminator: boolean): SightPublish {
    if (json == null) {
        return json;
    }
    return {
        
        'readOnlyFullAccessibleBy': json['readOnlyFullAccessibleBy'] == null ? undefined : json['readOnlyFullAccessibleBy'],
        'readOnlyFullEnabled': json['readOnlyFullEnabled'],
        'readOnlyFullUrl': json['readOnlyFullUrl'] == null ? undefined : json['readOnlyFullUrl'],
    };
}

export function SightPublishToJSON(json: any): SightPublish {
    return SightPublishToJSONTyped(json, false);
}

export function SightPublishToJSONTyped(value?: Omit<SightPublish, 'readOnlyFullUrl'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'readOnlyFullAccessibleBy': value['readOnlyFullAccessibleBy'],
        'readOnlyFullEnabled': value['readOnlyFullEnabled'],
    };
}

