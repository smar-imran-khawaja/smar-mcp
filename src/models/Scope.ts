/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { WorkspaceListing } from './WorkspaceListing';
import {
    WorkspaceListingFromJSON,
    WorkspaceListingFromJSONTyped,
    WorkspaceListingToJSON,
    WorkspaceListingToJSONTyped,
} from './WorkspaceListing';
import type { Sheet } from './Sheet';
import {
    SheetFromJSON,
    SheetFromJSONTyped,
    SheetToJSON,
    SheetToJSONTyped,
} from './Sheet';

/**
 * 
 * @export
 * @interface Scope
 */
export interface Scope {
    /**
     * Array of Sheet objects (containing just the sheet Id) of any sheets that the requester has access to that make up the report.
     * 
     * @type {Array<Sheet>}
     * @memberof Scope
     */
    sheets?: Array<Sheet>;
    /**
     * Array of Workspace objects (containing just the workspace Id) that the requester has access to that make up the report.
     * 
     * @type {Array<WorkspaceListing>}
     * @memberof Scope
     */
    workspaces?: Array<WorkspaceListing>;
}

/**
 * Check if a given object implements the Scope interface.
 */
export function instanceOfScope(value: object): value is Scope {
    return true;
}

export function ScopeFromJSON(json: any): Scope {
    return ScopeFromJSONTyped(json, false);
}

export function ScopeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Scope {
    if (json == null) {
        return json;
    }
    return {
        
        'sheets': json['sheets'] == null ? undefined : ((json['sheets'] as Array<any>).map(SheetFromJSON)),
        'workspaces': json['workspaces'] == null ? undefined : ((json['workspaces'] as Array<any>).map(WorkspaceListingFromJSON)),
    };
}

export function ScopeToJSON(json: any): Scope {
    return ScopeToJSONTyped(json, false);
}

export function ScopeToJSONTyped(value?: Scope | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sheets': value['sheets'] == null ? undefined : ((value['sheets'] as Array<any>).map(SheetToJSON)),
        'workspaces': value['workspaces'] == null ? undefined : ((value['workspaces'] as Array<any>).map(WorkspaceListingToJSON)),
    };
}

