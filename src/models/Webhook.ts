/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Subscope } from './Subscope';
import {
    SubscopeFromJSON,
    SubscopeFromJSONTyped,
    SubscopeToJSON,
    SubscopeToJSONTyped,
} from './Subscope';
import type { WebhookAllOfStats } from './WebhookAllOfStats';
import {
    WebhookAllOfStatsFromJSON,
    WebhookAllOfStatsFromJSONTyped,
    WebhookAllOfStatsToJSON,
    WebhookAllOfStatsToJSONTyped,
} from './WebhookAllOfStats';
import type { Timestamp } from './Timestamp';
import {
    TimestampFromJSON,
    TimestampFromJSONTyped,
    TimestampToJSON,
    TimestampToJSONTyped,
} from './Timestamp';

/**
 * 
 * @export
 * @interface Webhook
 */
export interface Webhook {
    /**
     * HTTPS URL where callbacks are sent.
     * @type {string}
     * @memberof Webhook
     */
    callbackUrl?: string;
    /**
     * Array of the events that are subscribed to. Currently, must be an array of size 1 that contains the string value '\*.\*' (asterisk period asterisk), which means "all objects" and "all events".
     * @type {Array<string>}
     * @memberof Webhook
     */
    events?: Array<string>;
    /**
     * Webhook name.
     * @type {string}
     * @memberof Webhook
     */
    name?: string;
    /**
     * Webhook version. Currently, the only supported value is 1. This attribute is intended to ensure backward compatibility as new webhook functionality is released. For example, a webhook with a version of 1 is guaranteed to always be sent callback objects that are compatible with the version 1 release of webhooks.
     * @type {number}
     * @memberof Webhook
     */
    version?: number;
    /**
     * Indicates whether the webhook is on (true) or off (false).
     * @type {boolean}
     * @memberof Webhook
     */
    enabled?: boolean;
    /**
     * Webhook Id.
     * @type {number}
     * @memberof Webhook
     */
    readonly id?: number;
    /**
     * API client Id corresponding to third-party app that created the webhook. Read-only. Only present if webhook was created by third-party app.
     * @type {string}
     * @memberof Webhook
     */
    readonly apiClientId?: string;
    /**
     * Id of the object that is subscribed to. Specified when a webhook is created and cannot be changed.
     * @type {number}
     * @memberof Webhook
     */
    scopeObjectId?: number;
    /**
     * API client name corresponding to third-party app that created the webhook. Read-only. Only present if webhook was created by third-party app.
     * @type {string}
     * @memberof Webhook
     */
    readonly apiClientName?: string;
    /**
     * 
     * @type {Timestamp}
     * @memberof Webhook
     */
    readonly createdAt?: Timestamp;
    /**
     * Details about the reason the webhook was disabled. Read-only. Only present when enabled=false.
     * @type {string}
     * @memberof Webhook
     */
    readonly disabledDetails?: string;
    /**
     * 
     * @type {Timestamp}
     * @memberof Webhook
     */
    readonly modifiedAt?: Timestamp;
    /**
     * Scope of the subscription. Currently, the only supported value is sheet. Specified when a webhook is created and cannot be changed.
     * @type {string}
     * @memberof Webhook
     */
    scope?: string;
    /**
     * Shared secret for this Webhook, randomly generated by Smartsheet. Read-only. See [Authenticating Callbacks](/api/smartsheet/openapi/webhooks) for details about how this value can be used.
     * @type {string}
     * @memberof Webhook
     */
    readonly sharedSecret?: string;
    /**
     * 
     * @type {WebhookAllOfStats}
     * @memberof Webhook
     */
    stats?: WebhookAllOfStats;
    /**
     * Webhook status. Read-only. See Webhook Status for list of possible values.
     * @type {string}
     * @memberof Webhook
     */
    readonly status?: WebhookStatusEnum;
    /**
     * 
     * @type {Subscope}
     * @memberof Webhook
     */
    subscope?: Subscope;
}


/**
 * @export
 */
export const WebhookStatusEnum = {
    DisabledAdministrative: 'DISABLED_ADMINISTRATIVE',
    DisabledAppRevoked: 'DISABLED_APP_REVOKED',
    DisabledByOwner: 'DISABLED_BY_OWNER',
    DisabledCallbackFailed: 'DISABLED_CALLBACK_FAILED',
    DisabledScopeInaccessible: 'DISABLED_SCOPE_INACCESSIBLE',
    DisabledVerificationFailed: 'DISABLED_VERIFICATION_FAILED',
    Enabled: 'ENABLED',
    NewNotVerified: 'NEW_NOT_VERIFIED'
} as const;
export type WebhookStatusEnum = typeof WebhookStatusEnum[keyof typeof WebhookStatusEnum];


/**
 * Check if a given object implements the Webhook interface.
 */
export function instanceOfWebhook(value: object): value is Webhook {
    return true;
}

export function WebhookFromJSON(json: any): Webhook {
    return WebhookFromJSONTyped(json, false);
}

export function WebhookFromJSONTyped(json: any, ignoreDiscriminator: boolean): Webhook {
    if (json == null) {
        return json;
    }
    return {
        
        'callbackUrl': json['callbackUrl'] == null ? undefined : json['callbackUrl'],
        'events': json['events'] == null ? undefined : json['events'],
        'name': json['name'] == null ? undefined : json['name'],
        'version': json['version'] == null ? undefined : json['version'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'id': json['id'] == null ? undefined : json['id'],
        'apiClientId': json['apiClientId'] == null ? undefined : json['apiClientId'],
        'scopeObjectId': json['scopeObjectId'] == null ? undefined : json['scopeObjectId'],
        'apiClientName': json['apiClientName'] == null ? undefined : json['apiClientName'],
        'createdAt': json['createdAt'] == null ? undefined : TimestampFromJSON(json['createdAt']),
        'disabledDetails': json['disabledDetails'] == null ? undefined : json['disabledDetails'],
        'modifiedAt': json['modifiedAt'] == null ? undefined : TimestampFromJSON(json['modifiedAt']),
        'scope': json['scope'] == null ? undefined : json['scope'],
        'sharedSecret': json['sharedSecret'] == null ? undefined : json['sharedSecret'],
        'stats': json['stats'] == null ? undefined : WebhookAllOfStatsFromJSON(json['stats']),
        'status': json['status'] == null ? undefined : json['status'],
        'subscope': json['subscope'] == null ? undefined : SubscopeFromJSON(json['subscope']),
    };
}

export function WebhookToJSON(json: any): Webhook {
    return WebhookToJSONTyped(json, false);
}

export function WebhookToJSONTyped(value?: Omit<Webhook, 'id'|'apiClientId'|'apiClientName'|'createdAt'|'disabledDetails'|'modifiedAt'|'sharedSecret'|'status'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'callbackUrl': value['callbackUrl'],
        'events': value['events'],
        'name': value['name'],
        'version': value['version'],
        'enabled': value['enabled'],
        'scopeObjectId': value['scopeObjectId'],
        'scope': value['scope'],
        'stats': WebhookAllOfStatsToJSON(value['stats']),
        'subscope': SubscopeToJSON(value['subscope']),
    };
}

