/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AutomationActionOneOf } from './AutomationActionOneOf';
import {
    instanceOfAutomationActionOneOf,
    AutomationActionOneOfFromJSON,
    AutomationActionOneOfFromJSONTyped,
    AutomationActionOneOfToJSON,
} from './AutomationActionOneOf';
import type { AutomationActionOneOf1 } from './AutomationActionOneOf1';
import {
    instanceOfAutomationActionOneOf1,
    AutomationActionOneOf1FromJSON,
    AutomationActionOneOf1FromJSONTyped,
    AutomationActionOneOf1ToJSON,
} from './AutomationActionOneOf1';
import type { AutomationActionOneOf2 } from './AutomationActionOneOf2';
import {
    instanceOfAutomationActionOneOf2,
    AutomationActionOneOf2FromJSON,
    AutomationActionOneOf2FromJSONTyped,
    AutomationActionOneOf2ToJSON,
} from './AutomationActionOneOf2';

/**
 * @type AutomationAction
 * 
 * @export
 */
export type AutomationAction = AutomationActionOneOf | AutomationActionOneOf1 | AutomationActionOneOf2;

export function AutomationActionFromJSON(json: any): AutomationAction {
    return AutomationActionFromJSONTyped(json, false);
}

export function AutomationActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AutomationAction {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfAutomationActionOneOf(json)) {
        return AutomationActionOneOfFromJSONTyped(json, true);
    }
    if (instanceOfAutomationActionOneOf1(json)) {
        return AutomationActionOneOf1FromJSONTyped(json, true);
    }
    if (instanceOfAutomationActionOneOf2(json)) {
        return AutomationActionOneOf2FromJSONTyped(json, true);
    }

    return {} as any;
}

export function AutomationActionToJSON(json: any): any {
    return AutomationActionToJSONTyped(json, false);
}

export function AutomationActionToJSONTyped(value?: AutomationAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfAutomationActionOneOf(value)) {
        return AutomationActionOneOfToJSON(value as AutomationActionOneOf);
    }
    if (instanceOfAutomationActionOneOf1(value)) {
        return AutomationActionOneOf1ToJSON(value as AutomationActionOneOf1);
    }
    if (instanceOfAutomationActionOneOf2(value)) {
        return AutomationActionOneOf2ToJSON(value as AutomationActionOneOf2);
    }

    return {};
}

