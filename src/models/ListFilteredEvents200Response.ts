/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Event } from './Event';
import {
    EventFromJSON,
    EventFromJSONTyped,
    EventToJSON,
    EventToJSONTyped,
} from './Event';

/**
 * 
 * @export
 * @interface ListFilteredEvents200Response
 */
export interface ListFilteredEvents200Response {
    /**
     * This string should be passed back to the next GET events call to obtain subsequent events.
     * @type {string}
     * @memberof ListFilteredEvents200Response
     */
    nextStreamPosition?: string;
    /**
     * True if more results are available. This is typically due to event counts exceeding the maxCount parameter passed in.
     * @type {boolean}
     * @memberof ListFilteredEvents200Response
     */
    moreAvailable?: boolean;
    /**
     * List of Events
     * @type {Array<Event>}
     * @memberof ListFilteredEvents200Response
     */
    data?: Array<Event>;
    /**
     * List of sheet Ids specified in the request that the user does not have access to.
     * @type {Array<string>}
     * @memberof ListFilteredEvents200Response
     */
    unavailableSheetIds?: Array<string>;
    /**
     * List of workspace Ids specified in the request that the user does not have access to.
     * @type {Array<string>}
     * @memberof ListFilteredEvents200Response
     */
    unavailableWorkspaceIds?: Array<string>;
}

/**
 * Check if a given object implements the ListFilteredEvents200Response interface.
 */
export function instanceOfListFilteredEvents200Response(value: object): value is ListFilteredEvents200Response {
    return true;
}

export function ListFilteredEvents200ResponseFromJSON(json: any): ListFilteredEvents200Response {
    return ListFilteredEvents200ResponseFromJSONTyped(json, false);
}

export function ListFilteredEvents200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListFilteredEvents200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'nextStreamPosition': json['nextStreamPosition'] == null ? undefined : json['nextStreamPosition'],
        'moreAvailable': json['moreAvailable'] == null ? undefined : json['moreAvailable'],
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(EventFromJSON)),
        'unavailableSheetIds': json['unavailableSheetIds'] == null ? undefined : json['unavailableSheetIds'],
        'unavailableWorkspaceIds': json['unavailableWorkspaceIds'] == null ? undefined : json['unavailableWorkspaceIds'],
    };
}

export function ListFilteredEvents200ResponseToJSON(json: any): ListFilteredEvents200Response {
    return ListFilteredEvents200ResponseToJSONTyped(json, false);
}

export function ListFilteredEvents200ResponseToJSONTyped(value?: ListFilteredEvents200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'nextStreamPosition': value['nextStreamPosition'],
        'moreAvailable': value['moreAvailable'],
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(EventToJSON)),
        'unavailableSheetIds': value['unavailableSheetIds'],
        'unavailableWorkspaceIds': value['unavailableWorkspaceIds'],
    };
}

