/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface TitleWidgetContent
 */
export interface TitleWidgetContent {
    /**
     * 
     * @type {string}
     * @memberof TitleWidgetContent
     */
    type?: TitleWidgetContentTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TitleWidgetContent
     */
    backgroundColor?: string;
    /**
     * The widget contents as HTML. The Title widget supports the following subset of HTML tags and CSS Styles:
     * 
     * HTML
     *   * br - line break
     *   * p - paragraph
     *   * span - section of the document
     * 
     * CSS
     *   * color
     *   * font-family
     *   * font-size
     *   * font-style
     *   * font-weight
     *   * text-align
     *   * text-decoration
     * 
     * @type {string}
     * @memberof TitleWidgetContent
     */
    htmlContent?: string;
}


/**
 * @export
 */
export const TitleWidgetContentTypeEnum = {
    Richtext: 'RICHTEXT'
} as const;
export type TitleWidgetContentTypeEnum = typeof TitleWidgetContentTypeEnum[keyof typeof TitleWidgetContentTypeEnum];


/**
 * Check if a given object implements the TitleWidgetContent interface.
 */
export function instanceOfTitleWidgetContent(value: object): value is TitleWidgetContent {
    return true;
}

export function TitleWidgetContentFromJSON(json: any): TitleWidgetContent {
    return TitleWidgetContentFromJSONTyped(json, false);
}

export function TitleWidgetContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): TitleWidgetContent {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'backgroundColor': json['backgroundColor'] == null ? undefined : json['backgroundColor'],
        'htmlContent': json['htmlContent'] == null ? undefined : json['htmlContent'],
    };
}

export function TitleWidgetContentToJSON(json: any): TitleWidgetContent {
    return TitleWidgetContentToJSONTyped(json, false);
}

export function TitleWidgetContentToJSONTyped(value?: TitleWidgetContent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'backgroundColor': value['backgroundColor'],
        'htmlContent': value['htmlContent'],
    };
}

