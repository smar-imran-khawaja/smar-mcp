/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Indicates who can access the 'Read-Only Full' view of the published sheet:
 *   * ALL - available to anyone who has the link.
 *   * ORG - available only to members of the sheet owner's Smartsheet organization account.
 *   * SHARED - available only to users shared to the item.
 * 
 * Only returned in the response if **readOnlyFullEnabled = true**.
 * 
 * @export
 */
export const ReadOnlyFullAccessibleBy = {
    All: 'ALL',
    Org: 'ORG',
    Shared: 'SHARED'
} as const;
export type ReadOnlyFullAccessibleBy = typeof ReadOnlyFullAccessibleBy[keyof typeof ReadOnlyFullAccessibleBy];


export function instanceOfReadOnlyFullAccessibleBy(value: any): boolean {
    for (const key in ReadOnlyFullAccessibleBy) {
        if (Object.prototype.hasOwnProperty.call(ReadOnlyFullAccessibleBy, key)) {
            if (ReadOnlyFullAccessibleBy[key as keyof typeof ReadOnlyFullAccessibleBy] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ReadOnlyFullAccessibleByFromJSON(json: any): ReadOnlyFullAccessibleBy {
    return ReadOnlyFullAccessibleByFromJSONTyped(json, false);
}

export function ReadOnlyFullAccessibleByFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadOnlyFullAccessibleBy {
    return json as ReadOnlyFullAccessibleBy;
}

export function ReadOnlyFullAccessibleByToJSON(value?: ReadOnlyFullAccessibleBy | null): any {
    return value as any;
}

export function ReadOnlyFullAccessibleByToJSONTyped(value: any, ignoreDiscriminator: boolean): ReadOnlyFullAccessibleBy {
    return value as ReadOnlyFullAccessibleBy;
}

