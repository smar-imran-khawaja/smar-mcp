/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ProfileImage } from './ProfileImage';
import {
    ProfileImageFromJSON,
    ProfileImageFromJSONTyped,
    ProfileImageToJSON,
    ProfileImageToJSONTyped,
} from './ProfileImage';

/**
 * User Object
 * @export
 * @interface User
 */
export interface User {
    /**
     * User Id.
     * @type {number}
     * @memberof User
     */
    readonly id?: number;
    /**
     * Indicates whether the user is a system admin (can manage user accounts and organization account).
     * @type {boolean}
     * @memberof User
     */
    admin?: boolean;
    /**
     * Timestamp of viewing an <a href="https://help.smartsheet.com/articles/1392225-customizing-a-welcome-message-upgrade-screen-enterprise-only" target="_blank" rel="noopener noreferrer">Enterprise Custom Welcome Screen</a> by the current user.
     * @type {Date}
     * @memberof User
     */
    readonly customWelcomeScreenViewed?: Date;
    /**
     * User's primary email address.
     * @type {string}
     * @memberof User
     */
    email?: string;
    /**
     * User's first name.
     * @type {string}
     * @memberof User
     */
    firstName?: string;
    /**
     * Indicates whether the user is a group admin (can create and edit groups).
     * @type {boolean}
     * @memberof User
     */
    groupAdmin?: boolean;
    /**
     * Last login time of the current user.
     * @type {Date}
     * @memberof User
     */
    readonly lastLogin?: Date;
    /**
     * User's last name.
     * @type {string}
     * @memberof User
     */
    lastName?: string;
    /**
     * Indicates whether the user is a licensed user (can create and own sheets).
     * @type {boolean}
     * @memberof User
     */
    licensedSheetCreator?: boolean;
    /**
     * User's full name (read-only).
     * @type {string}
     * @memberof User
     */
    readonly name?: string;
    /**
     * 
     * @type {ProfileImage}
     * @memberof User
     */
    profileImage?: ProfileImage;
    /**
     * Indicates whether the user is a resource viewer (can access resource views).
     * @type {boolean}
     * @memberof User
     */
    resourceViewer?: boolean;
    /**
     * **SUNSET** - The `sheetCount` attribute now holds the value `-1` and is included only if the retrieved user's `status` is `ACTIVE`.
     * 
     * @type {number}
     * @memberof User
     * @deprecated
     */
    readonly sheetCount?: number;
    /**
     * User status, set to one of the listed enum values.
     * @type {string}
     * @memberof User
     */
    status?: UserStatusEnum;
}


/**
 * @export
 */
export const UserStatusEnum = {
    Active: 'ACTIVE',
    Declined: 'DECLINED',
    Pending: 'PENDING',
    Deactivated: 'DEACTIVATED'
} as const;
export type UserStatusEnum = typeof UserStatusEnum[keyof typeof UserStatusEnum];


/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'admin': json['admin'] == null ? undefined : json['admin'],
        'customWelcomeScreenViewed': json['customWelcomeScreenViewed'] == null ? undefined : (new Date(json['customWelcomeScreenViewed'])),
        'email': json['email'] == null ? undefined : json['email'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'groupAdmin': json['groupAdmin'] == null ? undefined : json['groupAdmin'],
        'lastLogin': json['lastLogin'] == null ? undefined : (new Date(json['lastLogin'])),
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'licensedSheetCreator': json['licensedSheetCreator'] == null ? undefined : json['licensedSheetCreator'],
        'name': json['name'] == null ? undefined : json['name'],
        'profileImage': json['profileImage'] == null ? undefined : ProfileImageFromJSON(json['profileImage']),
        'resourceViewer': json['resourceViewer'] == null ? undefined : json['resourceViewer'],
        'sheetCount': json['sheetCount'] == null ? undefined : json['sheetCount'],
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: Omit<User, 'id'|'customWelcomeScreenViewed'|'lastLogin'|'name'|'sheetCount'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'admin': value['admin'],
        'email': value['email'],
        'firstName': value['firstName'],
        'groupAdmin': value['groupAdmin'],
        'lastName': value['lastName'],
        'licensedSheetCreator': value['licensedSheetCreator'],
        'profileImage': ProfileImageToJSON(value['profileImage']),
        'resourceViewer': value['resourceViewer'],
        'status': value['status'],
    };
}

