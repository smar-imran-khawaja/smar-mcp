/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface SearchResultItem
 */
export interface SearchResultItem {
    /**
     * Search result object Id.
     * @type {number}
     * @memberof SearchResultItem
     */
    objectId?: number;
    /**
     * Search result parent object Id.
     * @type {number}
     * @memberof SearchResultItem
     */
    parentObjectId?: number;
    /**
     * Additional info about the search result item. If the item has a discussion or attachment belonging to a proof, the context data includes the URL of that proof (e.g., "proofUrl: https://app.smartsheet.com/b/proofs/sheets/abc123/proofs/def456").
     * @type {Array<string>}
     * @memberof SearchResultItem
     */
    contextData?: Array<string>;
    /**
     * Search result object type (attachment, dashboard, discussion, folder, report, row, sheet, summaryField, template, or workspace).
     * @type {string}
     * @memberof SearchResultItem
     */
    objectType?: string;
    /**
     * Search result parent object name.
     * @type {string}
     * @memberof SearchResultItem
     */
    parentObjectName?: string;
    /**
     * Search result parent object type (dashboard, folder, report, sheet, template, or workspace).
     * @type {string}
     * @memberof SearchResultItem
     */
    parentObjectType?: string;
    /**
     * Search result text excerpt.
     * @type {string}
     * @memberof SearchResultItem
     */
    text?: string;
}

/**
 * Check if a given object implements the SearchResultItem interface.
 */
export function instanceOfSearchResultItem(value: object): value is SearchResultItem {
    return true;
}

export function SearchResultItemFromJSON(json: any): SearchResultItem {
    return SearchResultItemFromJSONTyped(json, false);
}

export function SearchResultItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResultItem {
    if (json == null) {
        return json;
    }
    return {
        
        'objectId': json['objectId'] == null ? undefined : json['objectId'],
        'parentObjectId': json['parentObjectId'] == null ? undefined : json['parentObjectId'],
        'contextData': json['contextData'] == null ? undefined : json['contextData'],
        'objectType': json['objectType'] == null ? undefined : json['objectType'],
        'parentObjectName': json['parentObjectName'] == null ? undefined : json['parentObjectName'],
        'parentObjectType': json['parentObjectType'] == null ? undefined : json['parentObjectType'],
        'text': json['text'] == null ? undefined : json['text'],
    };
}

export function SearchResultItemToJSON(json: any): SearchResultItem {
    return SearchResultItemToJSONTyped(json, false);
}

export function SearchResultItemToJSONTyped(value?: SearchResultItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'objectId': value['objectId'],
        'parentObjectId': value['parentObjectId'],
        'contextData': value['contextData'],
        'objectType': value['objectType'],
        'parentObjectName': value['parentObjectName'],
        'parentObjectType': value['parentObjectType'],
        'text': value['text'],
    };
}

