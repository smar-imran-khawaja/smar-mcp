/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface WidgetHyperlink
 */
export interface WidgetHyperlink {
    /**
     * Specifies what happens when a user clicks the widget. The type will determine what other properties are needed.
     *  * DISTI_COPY - a distribution link, only available if org has distribution links enabled.
     *  * NONE - do nothing, no other attribute required.
     *  * SMARTSHEET_ITEM - open a Smartsheet item that is not the SOURCE_SHEET, must also have one of the following attributes:
     *     * dashboardId
     *     * folderId
     *     * reportId
     *     * sheetId
     *     * workspaceId
     *  * SOURCE_SHEET - open the container where the widget data comes from, no other attribute required.
     *  * WEB -  launch the URL, must also have url attribute.
     * 
     * @type {string}
     * @memberof WidgetHyperlink
     */
    interactionType?: WidgetHyperlinkInteractionTypeEnum;
    /**
     * If interactionType = SMARTSHEET_ITEM this is the folder to open.
     * @type {number}
     * @memberof WidgetHyperlink
     */
    folderId?: number;
    /**
     * If interactionType = SMARTSHEET_ITEM this is the report to open.
     * @type {number}
     * @memberof WidgetHyperlink
     */
    reportId?: number;
    /**
     * If interactionType = SMARTSHEET_ITEM this is the sheet to open.
     * @type {number}
     * @memberof WidgetHyperlink
     */
    sheetId?: number;
    /**
     * If interactionType = SMARTSHEET_ITEM this is the dashboard to open.
     * @type {number}
     * @memberof WidgetHyperlink
     */
    sightId?: number;
    /**
     * If interactionType = WEB this is the URL to launch.
     * @type {string}
     * @memberof WidgetHyperlink
     */
    url?: string;
    /**
     * If interactionType = SMARTSHEET_ITEM this is the workspace to open.
     * @type {number}
     * @memberof WidgetHyperlink
     */
    workspaceId?: number;
}


/**
 * @export
 */
export const WidgetHyperlinkInteractionTypeEnum = {
    DistiCopy: 'DISTI_COPY',
    None: 'NONE',
    SmartsheetItem: 'SMARTSHEET_ITEM',
    SourceSheet: 'SOURCE_SHEET',
    Web: 'WEB'
} as const;
export type WidgetHyperlinkInteractionTypeEnum = typeof WidgetHyperlinkInteractionTypeEnum[keyof typeof WidgetHyperlinkInteractionTypeEnum];


/**
 * Check if a given object implements the WidgetHyperlink interface.
 */
export function instanceOfWidgetHyperlink(value: object): value is WidgetHyperlink {
    return true;
}

export function WidgetHyperlinkFromJSON(json: any): WidgetHyperlink {
    return WidgetHyperlinkFromJSONTyped(json, false);
}

export function WidgetHyperlinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): WidgetHyperlink {
    if (json == null) {
        return json;
    }
    return {
        
        'interactionType': json['interactionType'] == null ? undefined : json['interactionType'],
        'folderId': json['folderId'] == null ? undefined : json['folderId'],
        'reportId': json['reportId'] == null ? undefined : json['reportId'],
        'sheetId': json['sheetId'] == null ? undefined : json['sheetId'],
        'sightId': json['sightId'] == null ? undefined : json['sightId'],
        'url': json['url'] == null ? undefined : json['url'],
        'workspaceId': json['workspaceId'] == null ? undefined : json['workspaceId'],
    };
}

export function WidgetHyperlinkToJSON(json: any): WidgetHyperlink {
    return WidgetHyperlinkToJSONTyped(json, false);
}

export function WidgetHyperlinkToJSONTyped(value?: WidgetHyperlink | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'interactionType': value['interactionType'],
        'folderId': value['folderId'],
        'reportId': value['reportId'],
        'sheetId': value['sheetId'],
        'sightId': value['sightId'],
        'url': value['url'],
        'workspaceId': value['workspaceId'],
    };
}

