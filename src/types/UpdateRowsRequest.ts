/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Row } from './Row';
import {
    instanceOfRow,
    RowFromJSON,
    RowFromJSONTyped,
    RowToJSON,
} from './Row';

/**
 * @type UpdateRowsRequest
 * 
 * @export
 */
export type UpdateRowsRequest = Array<Row> | Row;

export function UpdateRowsRequestFromJSON(json: any): UpdateRowsRequest {
    return UpdateRowsRequestFromJSONTyped(json, false);
}

export function UpdateRowsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRowsRequest {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfRow(json)) {
        return RowFromJSONTyped(json, true);
    }
    if (Array.isArray(json)) {
        if (json.every(item => typeof item === 'object')) {
            if (json.every(item => instanceOfRow(item))) {
                return json.map(value => RowFromJSONTyped(value, true));
            }
        }
        return json;
    }

    return {} as any;
}

export function UpdateRowsRequestToJSON(json: any): any {
    return UpdateRowsRequestToJSONTyped(json, false);
}

export function UpdateRowsRequestToJSONTyped(value?: UpdateRowsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfRow(value)) {
        return RowToJSON(value as Row);
    }
    if (Array.isArray(value)) {
        if (value.every(item => typeof item === 'object')) {
            if (value.every(item => instanceOfRow(item))) {
                return value.map(value => RowToJSON(value as Row));
            }
        }
        return value;
    }

    return {};
}

