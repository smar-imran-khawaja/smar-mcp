/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface ReportPublish
 */
export interface ReportPublish {
    /**
     * Indicates who can access the 'Read-Only Full' view of the published report:
     * * If **ALL**, it is available to anyone who has the link.
     * * If **ORG**, it is available only to members of the report owner's Smartsheet organization account.
     * * If **SHARED**, it is available only to users shared to the item.
     * 
     * Only returned in a response if **readOnlyFullEnabled** = **true**.
     * 
     * @type {string}
     * @memberof ReportPublish
     */
    readOnlyFullAccessibleBy?: string;
    /**
     * Indicates which view the user has set for a read-only, default view of the published report. Must be one of
     * the following values: **CALENDAR**, **CARD**, or **GRID**.
     * 
     * @type {string}
     * @memberof ReportPublish
     */
    readOnlyFullDefaultView?: string;
    /**
     * (Required) If **true**, a rich version of the report is published with the ability to download row
     * attachments and discussions.
     * 
     * @type {boolean}
     * @memberof ReportPublish
     */
    readOnlyFullEnabled?: boolean;
    /**
     * Indicates whether the left nav toolbar is displayed. The default, or **true**, is to display the toolbar.
     * If **false**, hides the toolbar.
     * 
     * @type {boolean}
     * @memberof ReportPublish
     * @deprecated
     */
    readOnlyFullShowToolbar?: boolean;
    /**
     * URL for 'Read-Only Full' view of the published report.
     * 
     * Only returned in a response if **readOnlyFullEnabled** = **true**.
     * 
     * @type {string}
     * @memberof ReportPublish
     */
    readOnlyFullUrl?: string;
}

/**
 * Check if a given object implements the ReportPublish interface.
 */
export function instanceOfReportPublish(value: object): value is ReportPublish {
    return true;
}

export function ReportPublishFromJSON(json: any): ReportPublish {
    return ReportPublishFromJSONTyped(json, false);
}

export function ReportPublishFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportPublish {
    if (json == null) {
        return json;
    }
    return {
        
        'readOnlyFullAccessibleBy': json['readOnlyFullAccessibleBy'] == null ? undefined : json['readOnlyFullAccessibleBy'],
        'readOnlyFullDefaultView': json['readOnlyFullDefaultView'] == null ? undefined : json['readOnlyFullDefaultView'],
        'readOnlyFullEnabled': json['readOnlyFullEnabled'] == null ? undefined : json['readOnlyFullEnabled'],
        'readOnlyFullShowToolbar': json['readOnlyFullShowToolbar'] == null ? undefined : json['readOnlyFullShowToolbar'],
        'readOnlyFullUrl': json['readOnlyFullUrl'] == null ? undefined : json['readOnlyFullUrl'],
    };
}

export function ReportPublishToJSON(json: any): ReportPublish {
    return ReportPublishToJSONTyped(json, false);
}

export function ReportPublishToJSONTyped(value?: ReportPublish | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'readOnlyFullAccessibleBy': value['readOnlyFullAccessibleBy'],
        'readOnlyFullDefaultView': value['readOnlyFullDefaultView'],
        'readOnlyFullEnabled': value['readOnlyFullEnabled'],
        'readOnlyFullShowToolbar': value['readOnlyFullShowToolbar'],
        'readOnlyFullUrl': value['readOnlyFullUrl'],
    };
}

