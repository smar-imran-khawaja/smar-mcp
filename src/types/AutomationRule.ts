/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Timestamp } from './Timestamp';
import {
    TimestampFromJSON,
    TimestampFromJSONTyped,
    TimestampToJSON,
    TimestampToJSONTyped,
} from './Timestamp';
import type { MiniUser } from './MiniUser';
import {
    MiniUserFromJSON,
    MiniUserFromJSONTyped,
    MiniUserToJSON,
    MiniUserToJSONTyped,
} from './MiniUser';

/**
 * 
 * @export
 * @interface AutomationRule
 */
export interface AutomationRule {
    /**
     * AutomationRule Id.
     * @type {number}
     * @memberof AutomationRule
     */
    id?: number;
    /**
     * An [AutomationAction object](/api/smartsheet/openapi/automationrules/automationaction) containing information for this rule, such as type, recipients, and frequency.
     * @type {any}
     * @memberof AutomationRule
     */
    action?: any | null;
    /**
     * A timestamp of when the rule was originally added.
     * @type {Timestamp}
     * @memberof AutomationRule
     */
    createdAt?: Timestamp;
    /**
     * `User` object containing `name` and `email` of the creator of this rule.
     * 
     * @type {MiniUser}
     * @memberof AutomationRule
     */
    createdBy?: MiniUser;
    /**
     * Machine-readable reason a rule is disabled:
     * * `APPROVAL_COLUMN_MISSING` This rule's approval status column has been deleted.
     * 
     * * `APPROVAL_COLUMN_WRONG_TYPE` The approval column must be a dropdown column.
     * 
     * * `AUTOMATION_NOT_ENABLED_FOR_ORG` To create or edit automated actions,
     * you need to upgrade your organization account to a Business or Enterprise plan.
     * 
     * * `COLUMN_MISSING` A column referenced by this rule has been deleted.
     * 
     * * `COLUMN_TYPE_INCOMPATIBLE` A column referenced by this rule has been changed to an incompatible column type.
     * 
     * * `NO_POTENTIAL_RECIPIENTS` This rule has no recipients that will be able to receive
     * notifications based on this sheet's permission settings or this account's approved domain sharing list.
     * 
     * * `NO_VALID_SELECTED_COLUMNS` All selected columns for this rule have been deleted.
     * 
     * @type {string}
     * @memberof AutomationRule
     */
    disabledReason?: AutomationRuleDisabledReasonEnum;
    /**
     * Descriptive reason a rule is disabled.
     * @type {string}
     * @memberof AutomationRule
     */
    disabledReasonText?: string;
    /**
     * If true, indicates that the rule is active.
     * @type {boolean}
     * @memberof AutomationRule
     */
    enabled?: boolean;
    /**
     * The datetime for when the change was made to the rule.
     * @type {Timestamp}
     * @memberof AutomationRule
     */
    modifiedAt?: Timestamp;
    /**
     * `User` object containing the `name` and `email` of the user that made the change.
     * 
     * @type {MiniUser}
     * @memberof AutomationRule
     */
    modifiedBy?: MiniUser;
    /**
     * Rule name as shown in the UI.
     * @type {string}
     * @memberof AutomationRule
     */
    name?: string;
    /**
     * If true, indicates that the current user can modify the rule.
     * @type {boolean}
     * @memberof AutomationRule
     */
    userCanModify?: boolean;
}


/**
 * @export
 */
export const AutomationRuleDisabledReasonEnum = {
    ApprovalColumnMissing: 'APPROVAL_COLUMN_MISSING',
    ApprovalColumnWrongType: 'APPROVAL_COLUMN_WRONG_TYPE',
    AutomationNotEnabledForOrg: 'AUTOMATION_NOT_ENABLED_FOR_ORG',
    ColumnMissing: 'COLUMN_MISSING',
    ColumnTypeIncompatible: 'COLUMN_TYPE_INCOMPATIBLE',
    NoPotentialRecipients: 'NO_POTENTIAL_RECIPIENTS',
    NoValidSelectedColumns: 'NO_VALID_SELECTED_COLUMNS'
} as const;
export type AutomationRuleDisabledReasonEnum = typeof AutomationRuleDisabledReasonEnum[keyof typeof AutomationRuleDisabledReasonEnum];


/**
 * Check if a given object implements the AutomationRule interface.
 */
export function instanceOfAutomationRule(value: object): value is AutomationRule {
    return true;
}

export function AutomationRuleFromJSON(json: any): AutomationRule {
    return AutomationRuleFromJSONTyped(json, false);
}

export function AutomationRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): AutomationRule {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'action': json['action'] == null ? undefined : json['action'],
        'createdAt': json['createdAt'] == null ? undefined : TimestampFromJSON(json['createdAt']),
        'createdBy': json['createdBy'] == null ? undefined : MiniUserFromJSON(json['createdBy']),
        'disabledReason': json['disabledReason'] == null ? undefined : json['disabledReason'],
        'disabledReasonText': json['disabledReasonText'] == null ? undefined : json['disabledReasonText'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'modifiedAt': json['modifiedAt'] == null ? undefined : TimestampFromJSON(json['modifiedAt']),
        'modifiedBy': json['modifiedBy'] == null ? undefined : MiniUserFromJSON(json['modifiedBy']),
        'name': json['name'] == null ? undefined : json['name'],
        'userCanModify': json['userCanModify'] == null ? undefined : json['userCanModify'],
    };
}

export function AutomationRuleToJSON(json: any): AutomationRule {
    return AutomationRuleToJSONTyped(json, false);
}

export function AutomationRuleToJSONTyped(value?: AutomationRule | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'action': value['action'],
        'createdAt': TimestampToJSON(value['createdAt']),
        'createdBy': MiniUserToJSON(value['createdBy']),
        'disabledReason': value['disabledReason'],
        'disabledReasonText': value['disabledReasonText'],
        'enabled': value['enabled'],
        'modifiedAt': TimestampToJSON(value['modifiedAt']),
        'modifiedBy': MiniUserToJSON(value['modifiedBy']),
        'name': value['name'],
        'userCanModify': value['userCanModify'],
    };
}

