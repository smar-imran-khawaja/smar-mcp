/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { GroupMember } from './GroupMember';
import {
    GroupMemberFromJSON,
    GroupMemberFromJSONTyped,
    GroupMemberToJSON,
    GroupMemberToJSONTyped,
} from './GroupMember';
import type { Timestamp } from './Timestamp';
import {
    TimestampFromJSON,
    TimestampFromJSONTyped,
    TimestampToJSON,
    TimestampToJSONTyped,
} from './Timestamp';

/**
 * 
 * @export
 * @interface GetGroup200Response
 */
export interface GetGroup200Response {
    /**
     * Group Id.
     * @type {number}
     * @memberof GetGroup200Response
     */
    id?: number;
    /**
     * Group name.
     * @type {string}
     * @memberof GetGroup200Response
     */
    name?: string;
    /**
     * Group description.
     * @type {string}
     * @memberof GetGroup200Response
     */
    description?: string;
    /**
     * Group ownerâ€™s email address.
     * @type {string}
     * @memberof GetGroup200Response
     */
    owner?: string;
    /**
     * Group owner's user Id.
     * @type {number}
     * @memberof GetGroup200Response
     */
    ownerId?: number;
    /**
     * 
     * @type {Timestamp}
     * @memberof GetGroup200Response
     */
    createdAt?: Timestamp;
    /**
     * 
     * @type {Timestamp}
     * @memberof GetGroup200Response
     */
    modifiedAt?: Timestamp;
    /**
     * List of Group Members
     * @type {Array<GroupMember>}
     * @memberof GetGroup200Response
     */
    members?: Array<GroupMember>;
}

/**
 * Check if a given object implements the GetGroup200Response interface.
 */
export function instanceOfGetGroup200Response(value: object): value is GetGroup200Response {
    return true;
}

export function GetGroup200ResponseFromJSON(json: any): GetGroup200Response {
    return GetGroup200ResponseFromJSONTyped(json, false);
}

export function GetGroup200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetGroup200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'owner': json['owner'] == null ? undefined : json['owner'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'createdAt': json['createdAt'] == null ? undefined : TimestampFromJSON(json['createdAt']),
        'modifiedAt': json['modifiedAt'] == null ? undefined : TimestampFromJSON(json['modifiedAt']),
        'members': json['members'] == null ? undefined : ((json['members'] as Array<any>).map(GroupMemberFromJSON)),
    };
}

export function GetGroup200ResponseToJSON(json: any): GetGroup200Response {
    return GetGroup200ResponseToJSONTyped(json, false);
}

export function GetGroup200ResponseToJSONTyped(value?: GetGroup200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'owner': value['owner'],
        'ownerId': value['ownerId'],
        'createdAt': TimestampToJSON(value['createdAt']),
        'modifiedAt': TimestampToJSON(value['modifiedAt']),
        'members': value['members'] == null ? undefined : ((value['members'] as Array<any>).map(GroupMemberToJSON)),
    };
}

