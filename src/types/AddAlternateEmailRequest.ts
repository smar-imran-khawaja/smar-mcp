/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AddAlternateEmail } from './AddAlternateEmail';
import {
    instanceOfAddAlternateEmail,
    AddAlternateEmailFromJSON,
    AddAlternateEmailFromJSONTyped,
    AddAlternateEmailToJSON,
} from './AddAlternateEmail';

/**
 * @type AddAlternateEmailRequest
 * 
 * @export
 */
export type AddAlternateEmailRequest = AddAlternateEmail | Array<AddAlternateEmail>;

export function AddAlternateEmailRequestFromJSON(json: any): AddAlternateEmailRequest {
    return AddAlternateEmailRequestFromJSONTyped(json, false);
}

export function AddAlternateEmailRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddAlternateEmailRequest {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfAddAlternateEmail(json)) {
        return AddAlternateEmailFromJSONTyped(json, true);
    }
    if (Array.isArray(json)) {
        if (json.every(item => typeof item === 'object')) {
            if (json.every(item => instanceOfAddAlternateEmail(item))) {
                return json.map(value => AddAlternateEmailFromJSONTyped(value, true));
            }
        }
        return json;
    }

    return {} as any;
}

export function AddAlternateEmailRequestToJSON(json: any): any {
    return AddAlternateEmailRequestToJSONTyped(json, false);
}

export function AddAlternateEmailRequestToJSONTyped(value?: AddAlternateEmailRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfAddAlternateEmail(value)) {
        return AddAlternateEmailToJSON(value as AddAlternateEmail);
    }
    if (Array.isArray(value)) {
        if (value.every(item => typeof item === 'object')) {
            if (value.every(item => instanceOfAddAlternateEmail(item))) {
                return value.map(value => AddAlternateEmailToJSON(value as AddAlternateEmail));
            }
        }
        return value;
    }

    return {};
}

