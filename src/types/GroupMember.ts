/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface GroupMember
 */
export interface GroupMember {
    /**
     * Group member's user Id.
     * @type {number}
     * @memberof GroupMember
     */
    id?: number;
    /**
     * Group member's email address.
     * @type {string}
     * @memberof GroupMember
     */
    email?: string;
    /**
     * Group member's first name.
     * @type {string}
     * @memberof GroupMember
     */
    firstName?: string;
    /**
     * Group member's last name.
     * @type {string}
     * @memberof GroupMember
     */
    lastName?: string;
    /**
     * Group member's full name.
     * @type {string}
     * @memberof GroupMember
     */
    name?: string;
}

/**
 * Check if a given object implements the GroupMember interface.
 */
export function instanceOfGroupMember(value: object): value is GroupMember {
    return true;
}

export function GroupMemberFromJSON(json: any): GroupMember {
    return GroupMemberFromJSONTyped(json, false);
}

export function GroupMemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupMember {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'email': json['email'] == null ? undefined : json['email'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function GroupMemberToJSON(json: any): GroupMember {
    return GroupMemberToJSONTyped(json, false);
}

export function GroupMemberToJSONTyped(value?: GroupMember | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'email': value['email'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'name': value['name'],
    };
}

