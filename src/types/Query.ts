/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Criteria } from './Criteria';
import {
    CriteriaFromJSON,
    CriteriaFromJSONTyped,
    CriteriaToJSON,
    CriteriaToJSONTyped,
} from './Criteria';

/**
 * 
 * @export
 * @interface Query
 */
export interface Query {
    /**
     * 
     * @type {string}
     * @memberof Query
     */
    operator?: QueryOperatorEnum;
    /**
     * Criteria objects specifying custom criteria against which to match cell values.
     * @type {Array<Criteria>}
     * @memberof Query
     */
    criteria?: Array<Criteria>;
    /**
     * If true, indicates that "show parent rows" is enabled for the filters.
     * @type {boolean}
     * @memberof Query
     */
    includeParent?: boolean;
}


/**
 * @export
 */
export const QueryOperatorEnum = {
    And: 'AND',
    Or: 'OR'
} as const;
export type QueryOperatorEnum = typeof QueryOperatorEnum[keyof typeof QueryOperatorEnum];


/**
 * Check if a given object implements the Query interface.
 */
export function instanceOfQuery(value: object): value is Query {
    return true;
}

export function QueryFromJSON(json: any): Query {
    return QueryFromJSONTyped(json, false);
}

export function QueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Query {
    if (json == null) {
        return json;
    }
    return {
        
        'operator': json['operator'] == null ? undefined : json['operator'],
        'criteria': json['criteria'] == null ? undefined : ((json['criteria'] as Array<any>).map(CriteriaFromJSON)),
        'includeParent': json['includeParent'] == null ? undefined : json['includeParent'],
    };
}

export function QueryToJSON(json: any): Query {
    return QueryToJSONTyped(json, false);
}

export function QueryToJSONTyped(value?: Query | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'operator': value['operator'],
        'criteria': value['criteria'] == null ? undefined : ((value['criteria'] as Array<any>).map(CriteriaToJSON)),
        'includeParent': value['includeParent'],
    };
}

