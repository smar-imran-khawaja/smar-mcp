/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * In a project sheet, represents a value in a duration cell, or a lag value of a predecessor.
 * @export
 * @interface Duration
 */
export interface Duration {
    /**
     * The number of days for this duration.
     * @type {number}
     * @memberof Duration
     */
    days?: number;
    /**
     * If true, indicates this duration represents elapsed time, which ignores non-working time.
     * @type {boolean}
     * @memberof Duration
     */
    elapsed?: boolean;
    /**
     * The number of hours for this duration.
     * @type {number}
     * @memberof Duration
     */
    hours?: number;
    /**
     * The number of milliseconds for this duration.
     * @type {number}
     * @memberof Duration
     */
    milliseconds?: number;
    /**
     * The number of minutes for this duration.
     * @type {number}
     * @memberof Duration
     */
    minutes?: number;
    /**
     * When used as a predecessor's lag value, indicates whether the lag is negative (if true), or positive (false). The individual duration values themselves (for example, days, hours, or minutes) is always positive.
     * @type {boolean}
     * @memberof Duration
     */
    negative?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Duration
     */
    objectType?: DurationObjectTypeEnum;
    /**
     * The number of seconds for this duration.
     * @type {number}
     * @memberof Duration
     */
    seconds?: number;
    /**
     * The number of weeks for this duration.
     * @type {number}
     * @memberof Duration
     */
    weeks?: number;
}


/**
 * @export
 */
export const DurationObjectTypeEnum = {
    Duration: 'DURATION'
} as const;
export type DurationObjectTypeEnum = typeof DurationObjectTypeEnum[keyof typeof DurationObjectTypeEnum];


/**
 * Check if a given object implements the Duration interface.
 */
export function instanceOfDuration(value: object): value is Duration {
    return true;
}

export function DurationFromJSON(json: any): Duration {
    return DurationFromJSONTyped(json, false);
}

export function DurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Duration {
    if (json == null) {
        return json;
    }
    return {
        
        'days': json['days'] == null ? undefined : json['days'],
        'elapsed': json['elapsed'] == null ? undefined : json['elapsed'],
        'hours': json['hours'] == null ? undefined : json['hours'],
        'milliseconds': json['milliseconds'] == null ? undefined : json['milliseconds'],
        'minutes': json['minutes'] == null ? undefined : json['minutes'],
        'negative': json['negative'] == null ? undefined : json['negative'],
        'objectType': json['objectType'] == null ? undefined : json['objectType'],
        'seconds': json['seconds'] == null ? undefined : json['seconds'],
        'weeks': json['weeks'] == null ? undefined : json['weeks'],
    };
}

export function DurationToJSON(json: any): Duration {
    return DurationToJSONTyped(json, false);
}

export function DurationToJSONTyped(value?: Duration | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'days': value['days'],
        'elapsed': value['elapsed'],
        'hours': value['hours'],
        'milliseconds': value['milliseconds'],
        'minutes': value['minutes'],
        'negative': value['negative'],
        'objectType': value['objectType'],
        'seconds': value['seconds'],
        'weeks': value['weeks'],
    };
}

