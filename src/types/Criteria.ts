/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface Criteria
 */
export interface Criteria {
    /**
     * Column Id.
     * @type {number}
     * @memberof Criteria
     */
    columnId?: number;
    /**
     * Operator used to filter column values.
     * @type {string}
     * @memberof Criteria
     */
    operator?: CriteriaOperatorEnum;
    /**
     * Present if a custom filter criteria's operator has one or more arguments.
     * @type {Array<string>}
     * @memberof Criteria
     */
    values?: Array<string>;
}


/**
 * @export
 */
export const CriteriaOperatorEnum = {
    Between: 'BETWEEN',
    Contains: 'CONTAINS',
    Equal: 'EQUAL',
    Future: 'FUTURE',
    GreaterThan: 'GREATER_THAN',
    HasAttachments: 'HAS_ATTACHMENTS',
    HasComments: 'HAS_COMMENTS',
    IsBlank: 'IS_BLANK',
    IsChecked: 'IS_CHECKED',
    IsDate: 'IS_DATE',
    IsLocked: 'IS_LOCKED',
    IsNumber: 'IS_NUMBER',
    IsNotBlank: 'IS_NOT_BLANK',
    IsNotChecked: 'IS_NOT_CHECKED',
    IsNotDate: 'IS_NOT_DATE',
    IsNotNumber: 'IS_NOT_NUMBER',
    IsOneOf: 'IS_ONE_OF',
    LastNDays: 'LAST_N_DAYS',
    LessThan: 'LESS_THAN',
    NextNDays: 'NEXT_N_DAYS',
    NoAttachments: 'NO_ATTACHMENTS',
    NoComments: 'NO_COMMENTS',
    NotEqual: 'NOT_EQUAL',
    NotLocked: 'NOT_LOCKED',
    NotOnCriticalPath: 'NOT_ON_CRITICAL_PATH',
    OnCriticalPath: 'ON_CRITICAL_PATH',
    Past: 'PAST',
    Today: 'TODAY'
} as const;
export type CriteriaOperatorEnum = typeof CriteriaOperatorEnum[keyof typeof CriteriaOperatorEnum];


/**
 * Check if a given object implements the Criteria interface.
 */
export function instanceOfCriteria(value: object): value is Criteria {
    return true;
}

export function CriteriaFromJSON(json: any): Criteria {
    return CriteriaFromJSONTyped(json, false);
}

export function CriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Criteria {
    if (json == null) {
        return json;
    }
    return {
        
        'columnId': json['columnId'] == null ? undefined : json['columnId'],
        'operator': json['operator'] == null ? undefined : json['operator'],
        'values': json['values'] == null ? undefined : json['values'],
    };
}

export function CriteriaToJSON(json: any): Criteria {
    return CriteriaToJSONTyped(json, false);
}

export function CriteriaToJSONTyped(value?: Criteria | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'columnId': value['columnId'],
        'operator': value['operator'],
        'values': value['values'],
    };
}

