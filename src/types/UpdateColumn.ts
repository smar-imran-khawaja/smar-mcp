/* tslint:disable */
/* eslint-disable */
/**
 * Smartsheet OpenAPI Reference
 * Welcome to the OpenAPI reference documentation for the Smartsheet API!  > **IMPORTANT:** > * The Smartsheet API is restricted to users on Business and Enterprise plans > * The <a href=\"https://www.smartsheet.com/legal/developer-program-agreement\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Agreement</a> governs the use of the Smartsheet API and Smartsheet software development kits (SDKs)  **QUICKLINKS**  - **Base URL:**      ```     https://api.smartsheet.com/2.0/     ```  - **Getting started:** <a href=\"https://help.smartsheet.com/articles/2482389-generate-API-key\" target=\"_blank\" rel=\"noopener noreferrer\">Generate an API access token</a> and [make a request](/api/smartsheet/guides/getting-started).  - **Changelog:** See the latest [API updates](/api/smartsheet/changelog).  - **Schemas:** View the [object schemas](/api/smartsheet/openapi/schemas) not explicitly listed in the resource sections.  - **Error codes:** Look up common API [error codes](/api/smartsheet/error-codes).  - **Guides:** Learn various ways of using the API with the help of our [Guides](/api/smartsheet/introduction).  Browse the Smartsheet API operations by resource on the left and start building with the Smartsheet API! 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface UpdateColumn
 */
export interface UpdateColumn {
    /**
     * Column Id.
     * @type {number}
     * @memberof UpdateColumn
     */
    id?: number;
    /**
     * Column index or position. This number is zero-based.
     * @type {number}
     * @memberof UpdateColumn
     */
    index?: number;
    /**
     * Array of the options available for the column.
     * @type {Array<string>}
     * @memberof UpdateColumn
     */
    options?: Array<string>;
    /**
     * Column title.
     * @type {string}
     * @memberof UpdateColumn
     */
    title?: string;
    /**
     * See [Column Types](/api/smartsheet/openapi/columns)
     * @type {string}
     * @memberof UpdateColumn
     */
    type?: UpdateColumnTypeEnum;
    /**
     * Indicates whether validation has been enabled for the column (value = **true**).
     * @type {boolean}
     * @memberof UpdateColumn
     */
    validation?: boolean;
}


/**
 * @export
 */
export const UpdateColumnTypeEnum = {
    AbstractDatetime: 'ABSTRACT_DATETIME',
    Checkbox: 'CHECKBOX',
    ContactList: 'CONTACT_LIST',
    Date: 'DATE',
    Datetime: 'DATETIME',
    Duration: 'DURATION',
    MultiContactList: 'MULTI_CONTACT_LIST',
    MultiPicklist: 'MULTI_PICKLIST',
    Picklist: 'PICKLIST',
    Predecessor: 'PREDECESSOR',
    TextNumber: 'TEXT_NUMBER'
} as const;
export type UpdateColumnTypeEnum = typeof UpdateColumnTypeEnum[keyof typeof UpdateColumnTypeEnum];


/**
 * Check if a given object implements the UpdateColumn interface.
 */
export function instanceOfUpdateColumn(value: object): value is UpdateColumn {
    return true;
}

export function UpdateColumnFromJSON(json: any): UpdateColumn {
    return UpdateColumnFromJSONTyped(json, false);
}

export function UpdateColumnFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateColumn {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'index': json['index'] == null ? undefined : json['index'],
        'options': json['options'] == null ? undefined : json['options'],
        'title': json['title'] == null ? undefined : json['title'],
        'type': json['type'] == null ? undefined : json['type'],
        'validation': json['validation'] == null ? undefined : json['validation'],
    };
}

export function UpdateColumnToJSON(json: any): UpdateColumn {
    return UpdateColumnToJSONTyped(json, false);
}

export function UpdateColumnToJSONTyped(value?: UpdateColumn | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'index': value['index'],
        'options': value['options'],
        'title': value['title'],
        'type': value['type'],
        'validation': value['validation'],
    };
}

